import json
import random
import argparse
from pathlib import Path

POISON_TYPES = ["fabricated", "contradiction", "reasoning"]

def fabricate(doc):
    return doc + " NOTE: The event happened in Atlantis in 3022."

def contradict(doc):
    return doc.replace("yes", "no").replace("true", "false")

def reasoning_trap(doc):
    return doc + " However, experts disagree on the exact details."

def poison_doc(doc, poison_type):
    if poison_type == "fabricated":
        return fabricate(doc)
    elif poison_type == "contradiction":
        return contradict(doc)
    elif poison_type == "reasoning":
        return reasoning_trap(doc)
    return doc

def generate_poison(input_file, output_file, poison_ratio=0.3):
    data = []
    with open(input_file, "r") as f:
        for line in f:
            data.append(json.loads(line))

    poisoned = []
    for entry in data:
        if random.random() < poison_ratio:
            poison_type = random.choice(POISON_TYPES)
            poisoned_doc = poison_doc(entry["gold_doc"], poison_type)
            poisoned.append({
                "query": entry["query"],
                "poison_doc": poisoned_doc,
                "poison_type": poison_type
            })
        else:
            poisoned.append({
                "query": entry["query"],
                "poison_doc": entry["gold_doc"],
                "poison_type": "clean"
            })

    with open(output_file, "w") as f:
        for p in poisoned:
            f.write(json.dumps(p) + "\n")

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--input", type=str, required=True, help="Path to clean dataset JSONL")
    parser.add_argument("--output", type=str, required=True, help="Path to save poisoned dataset JSONL")
    parser.add_argument("--ratio", type=float, default=0.3, help="Poison ratio (0.1, 0.3, 0.5)")
    args = parser.parse_args()

    Path(args.output).parent.mkdir(parents=True, exist_ok=True)
    generate_poison(args.input, args.output, poison_ratio=args.ratio)
